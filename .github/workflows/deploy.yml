name: Build and Deploy to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Get a copy of your repository's code
      # Let's update this to v4 as well for good measure
      - name: Checkout code
        uses: actions/checkout@v4 # <-- UPDATED from v3

      # Step 2: This is the magic step!
      # It creates the dummy.js file and populates it with your secrets.
      - name: Inject Supabase credentials
        run: |
          echo "window.SUPABASE_URL = '${{ https://ggxvzeqgpnbjaibbzign.supabase.co }}';" > dummy.js
          echo "window.SUPABASE_ANON_KEY = '${{ eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdneHZ6ZXFncG5iamFpYmJ6aWduIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ0NTA1NzgsImV4cCI6MjA3MDAyNjU3OH0.RBxrY_JMTzsBf9qIrIsBceJxgH6KR6XP12p5442_4wo }}';" >> dummy.js
        
      # Step 3: Set up the GitHub Pages deployment artifact
      - name: Setup Pages
        uses: actions/configure-pages@v5 # <-- UPDATED from v3

      # Step 4: Upload the entire project folder as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # <-- UPDATED from v2
        with:
          path: '.' # Upload the entire root directory

      # Step 5: Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # <-- UPDATED from v2
